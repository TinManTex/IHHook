//GENERATED: by ghidra script ExportHooksToHeader.py
//via WriteFuncPtrSetFile
//function for setting function pointers of exported functions.
//addresses in addressset should be rebased or found by sig scan before this is called
// NOT_FOUND - default for a lapi we want to use, and should actually have found the address in prior exes, but aren't in the current exported address list
// NO_USE - something we dont really want to use for whatever reason
// USING_CODE - using the default lapi code implementation instead of hooking

#include "mgsvtpp_func_typedefs.h"

extern std::map<std::string, int64_t> addressSet;

namespace IHHook {
	void SetFuncPtrs() {
		GetStrCodeWithLength = (GetStrCodeWithLengthFunc*)addressSet["GetStrCodeWithLength"];
		GetStrCode32 = (GetStrCode32Func*)addressSet["GetStrCode32"];
		PathCode64Ext = (PathCode64ExtFunc*)addressSet["PathCode64Ext"];
		FNVHash32 = (FNVHash32Func*)addressSet["FNVHash32"];
		GetFreeRoamLangId = (GetFreeRoamLangIdFunc*)addressSet["GetFreeRoamLangId"];
		UpdateFOVLerp = (UpdateFOVLerpFunc*)addressSet["UpdateFOVLerp"];
		UnkPrintFuncStubbedOut = (UnkPrintFuncStubbedOutFunc*)addressSet["UnkPrintFuncStubbedOut"];
		l_StubbedOut = (l_StubbedOutFunc*)addressSet["l_StubbedOut"];
		nullsub_2 = (nullsub_2Func*)addressSet["nullsub_2"];
		LoadFile = (LoadFileFunc*)addressSet["LoadFile"];
		LoadFileSub = (LoadFileSubFunc*)addressSet["LoadFileSub"];
		Path_Copy = (Path_CopyFunc*)addressSet["Path_Copy"];
		GetEmptyPath = (GetEmptyPathFunc*)addressSet["GetEmptyPath"];
		LoadPlayerPartsFpk = (LoadPlayerPartsFpkFunc*)addressSet["LoadPlayerPartsFpk"];
		LoadPlayerPartsParts = (LoadPlayerPartsPartsFunc*)addressSet["LoadPlayerPartsParts"];
		LoadPlayerCamoFpk = (LoadPlayerCamoFpkFunc*)addressSet["LoadPlayerCamoFpk"];
		LoadPlayerCamoFv2 = (LoadPlayerCamoFv2Func*)addressSet["LoadPlayerCamoFv2"];
		LoadPlayerFacialMotionFpk = (LoadPlayerFacialMotionFpkFunc*)addressSet["LoadPlayerFacialMotionFpk"];
		LoadPlayerFacialMotionMtar = (LoadPlayerFacialMotionMtarFunc*)addressSet["LoadPlayerFacialMotionMtar"];
		LoadPlayerBionicArmFpk = (LoadPlayerBionicArmFpkFunc*)addressSet["LoadPlayerBionicArmFpk"];
		LoadPlayerBionicArmFv2 = (LoadPlayerBionicArmFv2Func*)addressSet["LoadPlayerBionicArmFv2"];
		CheckPlayerPartsIfShouldApplySkinToneFv2 = (CheckPlayerPartsIfShouldApplySkinToneFv2Func*)addressSet["CheckPlayerPartsIfShouldApplySkinToneFv2"];
		LoadPlayerPartsSkinToneFv2 = (LoadPlayerPartsSkinToneFv2Func*)addressSet["LoadPlayerPartsSkinToneFv2"];
		IsHeadNeededForPartsType = (IsHeadNeededForPartsTypeFunc*)addressSet["IsHeadNeededForPartsType"];
		IsHeadNeededForPartsTypeAndAvatar = (IsHeadNeededForPartsTypeAndAvatarFunc*)addressSet["IsHeadNeededForPartsTypeAndAvatar"];
		LoadPlayerSnakeFaceFpk = (LoadPlayerSnakeFaceFpkFunc*)addressSet["LoadPlayerSnakeFaceFpk"];
		LoadPlayerSnakeFaceFv2 = (LoadPlayerSnakeFaceFv2Func*)addressSet["LoadPlayerSnakeFaceFv2"];
		LoadAvatarOgreHornFpk = (LoadAvatarOgreHornFpkFunc*)addressSet["LoadAvatarOgreHornFpk"];
		LoadAvatarOgreHornFv2 = (LoadAvatarOgreHornFv2Func*)addressSet["LoadAvatarOgreHornFv2"];
		LoadBuddyMainFile = (LoadBuddyMainFileFunc*)addressSet["LoadBuddyMainFile"];
		LoadBuddyQuietWeaponFpk = (LoadBuddyQuietWeaponFpkFunc*)addressSet["LoadBuddyQuietWeaponFpk"];
		LoadBuddyDogCommonFPK = (LoadBuddyDogCommonFPKFunc*)addressSet["LoadBuddyDogCommonFPK"];
		LoadBuddyHorseCommonFPK = (LoadBuddyHorseCommonFPKFunc*)addressSet["LoadBuddyHorseCommonFPK"];
		LoadBuddyWalkerGearArmFpk = (LoadBuddyWalkerGearArmFpkFunc*)addressSet["LoadBuddyWalkerGearArmFpk"];
		LoadBuddyWalkerGearHeadFpk = (LoadBuddyWalkerGearHeadFpkFunc*)addressSet["LoadBuddyWalkerGearHeadFpk"];
		LoadBuddyWalkerGearWeaponFpk = (LoadBuddyWalkerGearWeaponFpkFunc*)addressSet["LoadBuddyWalkerGearWeaponFpk"];
		LoadDefaultFpksFunc = (LoadDefaultFpksFuncFunc*)addressSet["LoadDefaultFpksFunc"];
		PreparePlayerVehicleInSortie = (PreparePlayerVehicleInSortieFunc*)addressSet["PreparePlayerVehicleInSortie"];
		PreparePlayerVehicleInGame = (PreparePlayerVehicleInGameFunc*)addressSet["PreparePlayerVehicleInGame"];
		LoadDefaultFpkPtrFunc = (LoadDefaultFpkPtrFuncFunc*)addressSet["LoadDefaultFpkPtrFunc"];
		LoadAllVehicleCamoFpks = (LoadAllVehicleCamoFpksFunc*)addressSet["LoadAllVehicleCamoFpks"];
		BuddyCommandGetNameLangId = (BuddyCommandGetNameLangIdFunc*)addressSet["BuddyCommandGetNameLangId"];
		BuddyCommandGetDescriptionLangId = (BuddyCommandGetDescriptionLangIdFunc*)addressSet["BuddyCommandGetDescriptionLangId"];
		foxlua::NewModule = (foxlua::NewModuleFunc*)addressSet["foxlua::NewModule"];
		foxlua::NewSubModule = (foxlua::NewSubModuleFunc*)addressSet["foxlua::NewSubModule"];
		foxlua::AddCFuncToModule = (foxlua::AddCFuncToModuleFunc*)addressSet["foxlua::AddCFuncToModule"];
		foxlua::AddCFuncToModule2 = (foxlua::AddCFuncToModule2Func*)addressSet["foxlua::AddCFuncToModule2"];
		foxlua::AddCFuncToModule3 = (foxlua::AddCFuncToModule3Func*)addressSet["foxlua::AddCFuncToModule3"];
		foxlua::AddEnumToModule = (foxlua::AddEnumToModuleFunc*)addressSet["foxlua::AddEnumToModule"];
		foxlua::AddEnumToModule2 = (foxlua::AddEnumToModule2Func*)addressSet["foxlua::AddEnumToModule2"];
		foxlua::AddEnumToModule3 = (foxlua::AddEnumToModule3Func*)addressSet["foxlua::AddEnumToModule3"];
		foxlua::AddEnumToModule4 = (foxlua::AddEnumToModule4Func*)addressSet["foxlua::AddEnumToModule4"];
		RegisterVar = (RegisterVarFunc*)addressSet["RegisterVar"];
		RegisterVar_01 = (RegisterVar_01Func*)addressSet["RegisterVar_01"];
		RegisterVar_02 = (RegisterVar_02Func*)addressSet["RegisterVar_02"];
		RegisterVar_03 = (RegisterVar_03Func*)addressSet["RegisterVar_03"];
		RegisterVarArray = (RegisterVarArrayFunc*)addressSet["RegisterVarArray"];
		DeclareEntityClass = (DeclareEntityClassFunc*)addressSet["DeclareEntityClass"];
		lua::lua_newstate = (lua::lua_newstateFunc*)addressSet["lua::lua_newstate"];
		lua::lua_close = (lua::lua_closeFunc*)addressSet["lua::lua_close"];
		lua::lua_newthread = (lua::lua_newthreadFunc*)addressSet["lua::lua_newthread"];
		lua::lua_atpanic = (lua::lua_atpanicFunc*)addressSet["lua::lua_atpanic"];
		//lua::lua_gettop = (lua::lua_gettopFunc*)addressSet["lua::lua_gettop"];//USING_CODE
		lua::lua_settop = (lua::lua_settopFunc*)addressSet["lua::lua_settop"];
		lua::lua_pushvalue = (lua::lua_pushvalueFunc*)addressSet["lua::lua_pushvalue"];
		lua::lua_remove = (lua::lua_removeFunc*)addressSet["lua::lua_remove"];
		lua::lua_insert = (lua::lua_insertFunc*)addressSet["lua::lua_insert"];
		lua::lua_replace = (lua::lua_replaceFunc*)addressSet["lua::lua_replace"];
		lua::lua_checkstack = (lua::lua_checkstackFunc*)addressSet["lua::lua_checkstack"];
		lua::lua_xmove = (lua::lua_xmoveFunc*)addressSet["lua::lua_xmove"];
		lua::lua_isnumber = (lua::lua_isnumberFunc*)addressSet["lua::lua_isnumber"];
		lua::lua_isstring = (lua::lua_isstringFunc*)addressSet["lua::lua_isstring"];
		lua::lua_iscfunction = (lua::lua_iscfunctionFunc*)addressSet["lua::lua_iscfunction"];
		//lua::lua_isuserdata = (lua::lua_isuserdataFunc*)addressSet["lua::lua_isuserdata"];//USING_CODE
		lua::lua_type = (lua::lua_typeFunc*)addressSet["lua::lua_type"];
		//lua::lua_typename = (lua::lua_typenameFunc*)addressSet["lua::lua_typename"];//USING_CODE
		lua::lua_equal = (lua::lua_equalFunc*)addressSet["lua::lua_equal"];
		lua::lua_rawequal = (lua::lua_rawequalFunc*)addressSet["lua::lua_rawequal"];
		lua::lua_lessthan = (lua::lua_lessthanFunc*)addressSet["lua::lua_lessthan"];
		lua::lua_tonumber = (lua::lua_tonumberFunc*)addressSet["lua::lua_tonumber"];
		lua::lua_tointeger = (lua::lua_tointegerFunc*)addressSet["lua::lua_tointeger"];
		lua::lua_toboolean = (lua::lua_tobooleanFunc*)addressSet["lua::lua_toboolean"];
		lua::lua_tolstring = (lua::lua_tolstringFunc*)addressSet["lua::lua_tolstring"];
		lua::lua_objlen = (lua::lua_objlenFunc*)addressSet["lua::lua_objlen"];
		lua::lua_tocfunction = (lua::lua_tocfunctionFunc*)addressSet["lua::lua_tocfunction"];
		lua::lua_touserdata = (lua::lua_touserdataFunc*)addressSet["lua::lua_touserdata"];
		lua::lua_tothread = (lua::lua_tothreadFunc*)addressSet["lua::lua_tothread"];
		lua::lua_topointer = (lua::lua_topointerFunc*)addressSet["lua::lua_topointer"];
		lua::lua_pushnil = (lua::lua_pushnilFunc*)addressSet["lua::lua_pushnil"];
		lua::lua_pushnumber = (lua::lua_pushnumberFunc*)addressSet["lua::lua_pushnumber"];
		lua::lua_pushinteger = (lua::lua_pushintegerFunc*)addressSet["lua::lua_pushinteger"];
		lua::lua_pushlstring = (lua::lua_pushlstringFunc*)addressSet["lua::lua_pushlstring"];
		lua::lua_pushstring = (lua::lua_pushstringFunc*)addressSet["lua::lua_pushstring"];
		lua::lua_pushvfstring = (lua::lua_pushvfstringFunc*)addressSet["lua::lua_pushvfstring"];
		lua::lua_pushfstring = (lua::lua_pushfstringFunc*)addressSet["lua::lua_pushfstring"];
		lua::lua_pushcclosure = (lua::lua_pushcclosureFunc*)addressSet["lua::lua_pushcclosure"];
		lua::lua_pushboolean = (lua::lua_pushbooleanFunc*)addressSet["lua::lua_pushboolean"];
		lua::lua_pushlightuserdata = (lua::lua_pushlightuserdataFunc*)addressSet["lua::lua_pushlightuserdata"];
		lua::lua_pushthread = (lua::lua_pushthreadFunc*)addressSet["lua::lua_pushthread"];
		lua::lua_gettable = (lua::lua_gettableFunc*)addressSet["lua::lua_gettable"];
		lua::lua_getfield = (lua::lua_getfieldFunc*)addressSet["lua::lua_getfield"];
		lua::lua_rawget = (lua::lua_rawgetFunc*)addressSet["lua::lua_rawget"];
		lua::lua_rawgeti = (lua::lua_rawgetiFunc*)addressSet["lua::lua_rawgeti"];
		lua::lua_createtable = (lua::lua_createtableFunc*)addressSet["lua::lua_createtable"];
		lua::lua_newuserdata = (lua::lua_newuserdataFunc*)addressSet["lua::lua_newuserdata"];
		lua::lua_getmetatable = (lua::lua_getmetatableFunc*)addressSet["lua::lua_getmetatable"];
		lua::lua_getfenv = (lua::lua_getfenvFunc*)addressSet["lua::lua_getfenv"];
		lua::lua_settable = (lua::lua_settableFunc*)addressSet["lua::lua_settable"];
		lua::lua_setfield = (lua::lua_setfieldFunc*)addressSet["lua::lua_setfield"];
		lua::lua_rawset = (lua::lua_rawsetFunc*)addressSet["lua::lua_rawset"];
		lua::lua_rawseti = (lua::lua_rawsetiFunc*)addressSet["lua::lua_rawseti"];
		lua::lua_setmetatable = (lua::lua_setmetatableFunc*)addressSet["lua::lua_setmetatable"];
		lua::lua_setfenv = (lua::lua_setfenvFunc*)addressSet["lua::lua_setfenv"];
		lua::lua_call = (lua::lua_callFunc*)addressSet["lua::lua_call"];
		lua::lua_pcall = (lua::lua_pcallFunc*)addressSet["lua::lua_pcall"];
		lua::lua_cpcall = (lua::lua_cpcallFunc*)addressSet["lua::lua_cpcall"];
		lua::lua_load = (lua::lua_loadFunc*)addressSet["lua::lua_load"];
		lua::lua_dump = (lua::lua_dumpFunc*)addressSet["lua::lua_dump"];
		//lua::lua_yield = (lua::lua_yieldFunc*)addressSet["lua::lua_yield"];//USING_CODE
		lua::lua_resume = (lua::lua_resumeFunc*)addressSet["lua::lua_resume"];
		//lua::lua_status = (lua::lua_statusFunc*)addressSet["lua::lua_status"];//USING_CODE
		lua::lua_gc = (lua::lua_gcFunc*)addressSet["lua::lua_gc"];
		lua::lua_error = (lua::lua_errorFunc*)addressSet["lua::lua_error"];
		lua::lua_next = (lua::lua_nextFunc*)addressSet["lua::lua_next"];
		lua::lua_concat = (lua::lua_concatFunc*)addressSet["lua::lua_concat"];
		//lua::lua_getallocf = (lua::lua_getallocfFunc*)addressSet["lua::lua_getallocf"];//NO_USE
		//lua::lua_setallocf = (lua::lua_setallocfFunc*)addressSet["lua::lua_setallocf"];//NO_USE
		//lua::lua_setlevel = (lua::lua_setlevelFunc*)addressSet["lua::lua_setlevel"];//NO_USE
		lua::lua_getstack = (lua::lua_getstackFunc*)addressSet["lua::lua_getstack"];
		lua::lua_getinfo = (lua::lua_getinfoFunc*)addressSet["lua::lua_getinfo"];
		lua::lua_getlocal = (lua::lua_getlocalFunc*)addressSet["lua::lua_getlocal"];
		lua::lua_setlocal = (lua::lua_setlocalFunc*)addressSet["lua::lua_setlocal"];
		lua::lua_getupvalue = (lua::lua_getupvalueFunc*)addressSet["lua::lua_getupvalue"];
		lua::lua_setupvalue = (lua::lua_setupvalueFunc*)addressSet["lua::lua_setupvalue"];
		lua::lua_sethook = (lua::lua_sethookFunc*)addressSet["lua::lua_sethook"];
		//lua::lua_gethook = (lua::lua_gethookFunc*)addressSet["lua::lua_gethook"];//USING_CODE
		//lua::lua_gethookmask = (lua::lua_gethookmaskFunc*)addressSet["lua::lua_gethookmask"];//USING_CODE
		//lua::lua_gethookcount = (lua::lua_gethookcountFunc*)addressSet["lua::lua_gethookcount"];//USING_CODE
		lua::luaI_openlib = (lua::luaI_openlibFunc*)addressSet["lua::luaI_openlib"];
		//lua::luaL_register = (lua::luaL_registerFunc*)addressSet["lua::luaL_register"];//USING_CODE
		lua::luaL_getmetafield = (lua::luaL_getmetafieldFunc*)addressSet["lua::luaL_getmetafield"];
		lua::luaL_callmeta = (lua::luaL_callmetaFunc*)addressSet["lua::luaL_callmeta"];
		lua::luaL_typerror = (lua::luaL_typerrorFunc*)addressSet["lua::luaL_typerror"];
		lua::luaL_argerror = (lua::luaL_argerrorFunc*)addressSet["lua::luaL_argerror"];
		lua::luaL_checklstring = (lua::luaL_checklstringFunc*)addressSet["lua::luaL_checklstring"];
		lua::luaL_optlstring = (lua::luaL_optlstringFunc*)addressSet["lua::luaL_optlstring"];
		lua::luaL_checknumber = (lua::luaL_checknumberFunc*)addressSet["lua::luaL_checknumber"];
		//lua::luaL_optnumber = (lua::luaL_optnumberFunc*)addressSet["lua::luaL_optnumber"];//USING_CODE
		lua::luaL_checkinteger = (lua::luaL_checkintegerFunc*)addressSet["lua::luaL_checkinteger"];
		lua::luaL_optinteger = (lua::luaL_optintegerFunc*)addressSet["lua::luaL_optinteger"];
		lua::luaL_checkstack = (lua::luaL_checkstackFunc*)addressSet["lua::luaL_checkstack"];
		lua::luaL_checktype = (lua::luaL_checktypeFunc*)addressSet["lua::luaL_checktype"];
		lua::luaL_checkany = (lua::luaL_checkanyFunc*)addressSet["lua::luaL_checkany"];
		lua::luaL_newmetatable = (lua::luaL_newmetatableFunc*)addressSet["lua::luaL_newmetatable"];
		lua::luaL_checkudata = (lua::luaL_checkudataFunc*)addressSet["lua::luaL_checkudata"];
		lua::luaL_where = (lua::luaL_whereFunc*)addressSet["lua::luaL_where"];
		lua::luaL_error = (lua::luaL_errorFunc*)addressSet["lua::luaL_error"];
		lua::luaL_checkoption = (lua::luaL_checkoptionFunc*)addressSet["lua::luaL_checkoption"];
		//lua::luaL_ref = (lua::luaL_refFunc*)addressSet["lua::luaL_ref"];//USING_CODE
		//lua::luaL_unref = (lua::luaL_unrefFunc*)addressSet["lua::luaL_unref"];//USING_CODE
		lua::luaL_loadfile = (lua::luaL_loadfileFunc*)addressSet["lua::luaL_loadfile"];
		lua::luaL_loadbuffer = (lua::luaL_loadbufferFunc*)addressSet["lua::luaL_loadbuffer"];
		//lua::luaL_loadstring = (lua::luaL_loadstringFunc*)addressSet["lua::luaL_loadstring"];//USING_CODE
		lua::luaL_newstate = (lua::luaL_newstateFunc*)addressSet["lua::luaL_newstate"];
		lua::luaL_gsub = (lua::luaL_gsubFunc*)addressSet["lua::luaL_gsub"];
		lua::luaL_findtable = (lua::luaL_findtableFunc*)addressSet["lua::luaL_findtable"];
		//lua::luaL_buffinit = (lua::luaL_buffinitFunc*)addressSet["lua::luaL_buffinit"];//USING_CODE
		lua::luaL_prepbuffer = (lua::luaL_prepbufferFunc*)addressSet["lua::luaL_prepbuffer"];
		lua::luaL_addlstring = (lua::luaL_addlstringFunc*)addressSet["lua::luaL_addlstring"];
		//lua::luaL_addstring = (lua::luaL_addstringFunc*)addressSet["lua::luaL_addstring"];//USING_CODE
		lua::luaL_addvalue = (lua::luaL_addvalueFunc*)addressSet["lua::luaL_addvalue"];
		lua::luaL_pushresult = (lua::luaL_pushresultFunc*)addressSet["lua::luaL_pushresult"];
		lua::luaopen_base = (lua::luaopen_baseFunc*)addressSet["lua::luaopen_base"];
		lua::luaopen_table = (lua::luaopen_tableFunc*)addressSet["lua::luaopen_table"];
		lua::luaopen_io = (lua::luaopen_ioFunc*)addressSet["lua::luaopen_io"];
		lua::luaopen_os = (lua::luaopen_osFunc*)addressSet["lua::luaopen_os"];
		lua::luaopen_string = (lua::luaopen_stringFunc*)addressSet["lua::luaopen_string"];
		lua::luaopen_math = (lua::luaopen_mathFunc*)addressSet["lua::luaopen_math"];
		lua::luaopen_debug = (lua::luaopen_debugFunc*)addressSet["lua::luaopen_debug"];
		lua::luaopen_package = (lua::luaopen_packageFunc*)addressSet["lua::luaopen_package"];
		lua::luaL_openlibs = (lua::luaL_openlibsFunc*)addressSet["lua::luaL_openlibs"];
	}//SetFuncPtrs

}//namespace IHHook
